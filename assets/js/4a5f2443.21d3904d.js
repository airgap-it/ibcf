"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[934],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>f});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),p=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},c=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,i(i({ref:e},c),{},{components:r})):n.createElement(f,i({ref:e},c))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[d]="string"==typeof t?t:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},35949:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={title:"EIP-1186 Proof Validator",slug:"/relay-contracts/tezos/validator",hide_title:!0},i=void 0,l={unversionedId:"relay-contracts/tezos/validator",id:"relay-contracts/tezos/validator",title:"EIP-1186 Proof Validator",description:"Implementations",source:"@site/docs/relay-contracts/tezos/validator.mdx",sourceDirName:"relay-contracts/tezos",slug:"/relay-contracts/tezos/validator",permalink:"/ibcf/relay-contracts/tezos/validator",draft:!1,editUrl:"https://github.com/airgap-it/ibcf/tree/main/apps/documentation/docs/relay-contracts/tezos/validator.mdx",tags:[],version:"current",frontMatter:{title:"EIP-1186 Proof Validator",slug:"/relay-contracts/tezos/validator",hide_title:!0},sidebar:"docs",previous:{title:"State Aggregator",permalink:"/ibcf/relay-contracts/tezos/state"},next:{title:"Proof Validator",permalink:"/ibcf/relay-contracts/evm/validator"}},s={},p=[{value:"Implementations",id:"implementations",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>submit_block_state_root</code>",id:"submit_block_state_root",level:3},{value:"<code>configure</code>",id:"configure",level:3},{value:"Views",id:"views",level:2},{value:"<code>validate_storage_proof</code>",id:"validate_storage_proof",level:3}],c={toc:p};function d(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"implementations"},"Implementations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/airgap-it/ibcf/blob/main/contracts/tezos/IBCF_Eth_Validator.py"},"IBCF_Eth_Validator.py"))),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"submit_block_state_root"},(0,a.kt)("inlineCode",{parentName:"h3"},"submit_block_state_root")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(pair %submit_block_state_root\n    (nat %block_number)\n    (bytes %state_root)\n)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Validators call this method with the block state roots of an EVM ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1186"},"EIP-1186")," enabled chain."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requires permissions?")," Yes, only ",(0,a.kt)("inlineCode",{parentName:"p"},"validators")," can call this method."),(0,a.kt)("div",{class:"padding-vert--md"}),(0,a.kt)("h3",{id:"configure"},(0,a.kt)("inlineCode",{parentName:"h3"},"configure")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(list %configure\n    (or\n        (address %update_administrator)\n        (nat %update_history_length)\n        (nat %update_minimum_endorsements)\n        (nat %update_snapshot_interval)\n        (set %update_validators (or (address %add) (address %remove)))\n    )\n)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," This method modifies the contract configurations."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requires permissions?")," Yes, only the multisig administrator can call this method."),(0,a.kt)("div",{class:"padding-vert--md"}),(0,a.kt)("h2",{id:"views"},"Views"),(0,a.kt)("h3",{id:"validate_storage_proof"},(0,a.kt)("inlineCode",{parentName:"h3"},"validate_storage_proof")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input type:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(pair\n    (bytes %account)\n    (bytes %account_proof_rlp)\n    (nat %block_number)\n    (bytes %storage_proof_rlp)\n    (bytes %storage_slot)\n)\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"bytes")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description:")," Contracts in a Tezos ecosystem can call this method to validate ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1186"},"EIP-1186")," storage slot proofs of EVM contracts."),(0,a.kt)("p",null,"If the proof is valid, it returns the ",(0,a.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp"},"RLP")," encoded value of the EVM contract storage slot."))}d.isMDXComponent=!0}}]);